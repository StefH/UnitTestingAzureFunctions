pool:
  vmImage: 'VS2017-Win2016'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  buildProjects: '**/src/CSharpOddOrEvenHttpTrigger/*.csproj'
  testProjects: '**/test/CSharpOddOrEvent.Tests/*.csproj'

steps:
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    arguments: /p:Configuration=$(buildConfiguration)
    projects: $(buildProjects)

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    arguments: /p:Configuration=$(buildConfiguration)
    projects: $(testProjects)

- task: DotNetCoreCLI@2
  displayName: Publish
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest')) # Do not run for PullRequests
  inputs:
    command: publish
    publishWebProjects: False
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True
    
- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest')) # Do not run for PullRequests
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'

#
#- task: DotNetCoreCLI@2
  #displayName: Pack
  #condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest')) # Do not run for PullRequests
  #inputs:
    #command: pack
    #configuration: $(buildConfiguration)
    #packagesToPack: $(buildProjects)
    #nobuild: true
    #packDirectory: '$(Build.ArtifactStagingDirectory)/function'
    #verbosityPack: 'normal'